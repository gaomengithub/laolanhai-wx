{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TYPE_ARRAY = '[object Array]';\nvar TYPE_OBJECT = '[object Object]';\nvar TYPE_FUNCTION = '[object Function]';\n\nfunction setComputed(storeData, value, obj, key) {\n  var type = getType(value);\n  if (type === TYPE_FUNCTION) {\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      get: function get() {\n        return value.call(storeData);\n      },\n      set: function set() {\n        console.warn('计算属性不支持重新赋值');\n      }\n    });\n  } else if (type === TYPE_OBJECT) {\n    Object.keys(value).forEach(function (subKey) {\n      setComputed(storeData, value[subKey], value, subKey);\n    });\n  } else if (type === TYPE_ARRAY) {\n    value.forEach(function (item, index) {\n      setComputed(storeData, item, value, index);\n    });\n  }\n}\n\nfunction deepCopy(data) {\n  var type = getType(data);\n  if (type === TYPE_OBJECT) {\n    var obj = {};\n    Object.keys(data).forEach(function (key) {\n      return obj[key] = deepCopy(data[key]);\n    });\n    return obj;\n  }\n  if (type === TYPE_ARRAY) {\n    return data.map(deepCopy);\n  }\n  return data;\n}\n\nfunction getNowPage() {\n  var pages = getCurrentPages();\n  return pages[pages.length - 1];\n}\n\nfunction setState(vm, data) {\n  vm._new_data = vm._new_data || {};\n  Object.assign(vm._new_data, data);\n  return new Promise(function (resolve) {\n    Promise.resolve().then(function () {\n      if (vm._new_data) {\n        var diffState = getDiffState(vm._new_data, vm.data);\n        vm._new_data = null;\n        vm.setData(diffState, resolve);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nfunction getDiffState(state, preState) {\n  var newState = {};\n  stateDiff(deepCopy(state), preState, '', newState);\n  return newState;\n}\n\nfunction getType(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction addDiffState(newState, key, val) {\n  key !== '' && (newState[key] = val);\n}\n\nfunction stateDiff(state, preState, path, newState) {\n  if (state === preState) return;\n  var stateType = getType(state);\n  var preStateType = getType(preState);\n  if (stateType === TYPE_OBJECT) {\n    var stateKeys = Object.keys(state);\n    var preStateKeys = Object.keys(preState || {});\n    var stateLen = stateKeys.length;\n    var preStateLen = preStateKeys.length;\n    if (path !== '') {\n      if (preStateType !== TYPE_OBJECT || stateLen < preStateLen || stateLen === 0 || preStateLen === 0) {\n        addDiffState(newState, path, state);\n        return;\n      }\n      preStateKeys.forEach(function (key) {\n        if (state[key] === undefined) {\n          state[key] = null; // 已删除的属性设置为null\n          stateKeys.indexOf(key) === -1 && stateKeys.push(key);\n        }\n      });\n    }\n    stateKeys.forEach(function (key) {\n      var subPath = path === '' ? key : path + '.' + key;\n      stateDiff(state[key], preState[key], subPath, newState);\n    });\n    return;\n  }\n  if (stateType === TYPE_ARRAY) {\n    if (preStateType !== TYPE_ARRAY || state.length < preState.length || state.length === 0 || preState.length === 0) {\n      addDiffState(newState, path, state);\n      return;\n    }\n    preState.forEach(function (item, index) {\n      state[index] === undefined && (state[index] = null); // 已删除的属性设置为null\n    });\n    state.forEach(function (item, index) {\n      return stateDiff(item, preState[index], path + '[' + index + ']', newState);\n    });\n    return;\n  }\n  addDiffState(newState, path, state);\n}\n\nfunction getVmRoute(vm) {\n  return vm.route;\n}\n\nfunction getCurrentRoutes() {\n  return getCurrentPages().map(function (f) {\n    return getVmRoute(f);\n  });\n}\n\nfunction initComponent(vm) {\n  if (vm.route) return;\n  var pageVm = vm.$page || vm.pageinstance || getNowPage() || {};\n  vm.route = pageVm.route;\n}\n\nvar Store = function () {\n  function Store() {\n    var _this = this;\n\n    _classCallCheck(this, Store);\n\n    this.__vms = [];\n    setTimeout(function () {\n      _this._setComputed();\n    }, 0);\n  }\n\n  _createClass(Store, [{\n    key: '_setComputed',\n    value: function _setComputed() {\n      if (!this.__isReadyComputed) {\n        this.__isReadyComputed = true;\n        setComputed(this.data, this.data);\n      }\n    }\n  }, {\n    key: 'bind',\n    value: function bind(vm, key) {\n      if (!key) {\n        console.error('\\u8BF7\\u8BBE\\u7F6Estore\\u5728\\u5F53\\u524D\\u7EC4\\u4EF6\\u5B9E\\u4F8Bdata\\u4E2D\\u7684key\\uFF0C\\u5982store.bind(this, \\'$store\\')');\n        return;\n      }\n      vm.data = vm.data || {};\n      vm.data[key] = null;\n      this.__vms = this.__vms || [];\n      this._setComputed();\n      this.__vms.push({ vm: vm, key: key });\n      setState(vm, _defineProperty({}, key, this.data));\n      setTimeout(function () {\n        return initComponent(vm);\n      }, 360);\n    }\n  }, {\n    key: 'unbind',\n    value: function unbind(vm) {\n      this.__vms = (this.__vms || []).filter(function (f) {\n        return f.vm !== vm;\n      });\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      var _this2 = this;\n\n      var currRoutes = getCurrentRoutes();\n      var nowVmRoute = currRoutes[currRoutes.length - 1];\n      var delayVms = [];\n      this.__vms = (this.__vms || []).filter(function (f) {\n        var vmRoute = getVmRoute(f.vm);\n        if (currRoutes.includes(vmRoute)) {\n          if (nowVmRoute === vmRoute) {\n            setState(f.vm, _defineProperty({}, f.key, _this2.data));\n          } else {\n            // 延迟更新\n            delayVms.push(f);\n          }\n          return true;\n        }\n      });\n      if (!delayVms.length) return;\n      clearTimeout(this.__delayTimer);\n      this.__delayTimer = setTimeout(function () {\n        delayVms.forEach(function (f) {\n          return setState(f.vm, _defineProperty({}, f.key, _this2.data));\n        });\n      }, 360);\n    }\n  }]);\n\n  return Store;\n}();\n\nmodule.exports = { Store: Store };"]}